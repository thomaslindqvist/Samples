Vad är en smart pointer, referens räknande mekanism.

När kan man anv smart pekare, skapare != destruerare.

Olika smart pointers, boost::Shared_ptr/array, CAuto (TL), AutoPtr (STL), "egen RAII", kommer i C++11 (boost)

EX: Assign, skapa pekare utanför -> shared_ptr, funktions argument (ref/by-value), STL container data vs raw pointers (char[] vs vector).

----
Init by ref:
Why?
Alokera allt minne i init kan vara bra på inbygda system. 
Dela gemensamma resurser  isf skapa nya. Deterministiskt. Slipper pekar pekar aretmetik (!= 0).
Objekten ligger på stacken, om man vill.

Fallgropar:
Klassen behöver en "fungerande" copy ctro, assigment operator. Vilket iofs alltid behövs.

Det går att göra fel, ex:
EcClass* x = NULL;
AnnanClass y(*x);

class AnnanClass
{ 
public: 
AnnanClass(EnClass&) : m_y(y)(}
EnClass& m_y;
};








